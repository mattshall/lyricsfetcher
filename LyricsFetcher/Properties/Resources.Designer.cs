//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LyricsFetcher.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LyricsFetcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Do you want to accept all successful lookups?.
        /// </summary>
        internal static string AcceptAllMsg {
            get {
                return ResourceManager.GetString("AcceptAllMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a LyricsFetcher.
        /// </summary>
        internal static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap burn16 {
            get {
                object obj = ResourceManager.GetObject("burn16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The lyrics cache has been discard. Your next library load will be significantly slower..
        /// </summary>
        internal static string CacheDiscardedMsg {
            get {
                return ResourceManager.GetString("CacheDiscardedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The lyrics cache is used to significantly speed up the loading of the music library. The cache is not involved with the fetching of lyrics from the internet. 
        ///
        ///You would want to discard the cache if you had modified lyrics within the library application itself, rather than through LyricsFetcher.
        ///
        ///Are you sure you want to discard all cached lyrics?.
        /// </summary>
        internal static string DiscardCacheMsg {
            get {
                return ResourceManager.GetString("DiscardCacheMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The iTunes application has been closed. You must restart this application to continue finding lyrics..
        /// </summary>
        internal static string ITunesClosedMsg {
            get {
                return ResourceManager.GetString("ITunesClosedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Do you want to look up all {0} songs that are shown in the list?.
        /// </summary>
        internal static string LookupAllMsg {
            get {
                return ResourceManager.GetString("LookupAllMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap network_offline {
            get {
                object obj = ResourceManager.GetObject("network_offline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap process_stop {
            get {
                object obj = ResourceManager.GetObject("process_stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap process_working {
            get {
                object obj = ResourceManager.GetObject("process_working", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a This song could not be played. Check to see if the underlying media file (&quot;{0}&quot;) been moved or deleted.
        ///
        ///The library returned this error: {1}.
        /// </summary>
        internal static string SongFailedToPlayMsg {
            get {
                return ResourceManager.GetString("SongFailedToPlayMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The song &quot;{0}&quot; could not be updated. It is possible that the underlying media file (&quot;{1}&quot;) is read-only, missing or corrupt.
        ///
        ///The library returned this error: {2}.
        /// </summary>
        internal static string SongFailedToUpdateMsgITunes {
            get {
                return ResourceManager.GetString("SongFailedToUpdateMsgITunes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The song &quot;{0}&quot; could not be updated. It is possible that the underlying media file (&quot;{1}&quot;) is read-only, missing or in a format that Windows Media cannot update.
        ///
        ///The library returned this error: {2}.
        /// </summary>
        internal static string SongFailedToUpdateMsgWmp {
            get {
                return ResourceManager.GetString("SongFailedToUpdateMsgWmp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap splashscreen {
            get {
                object obj = ResourceManager.GetObject("splashscreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop24 {
            get {
                object obj = ResourceManager.GetObject("stop24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trebleclef128 {
            get {
                object obj = ResourceManager.GetObject("trebleclef128", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trebleclef32 {
            get {
                object obj = ResourceManager.GetObject("trebleclef32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trebleclef48 {
            get {
                object obj = ResourceManager.GetObject("trebleclef48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a LyricsFetcher - iTunes Library.
        /// </summary>
        internal static string WindowLabelITunes {
            get {
                return ResourceManager.GetString("WindowLabelITunes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a LyricsFetcher - Windows Media Player Library.
        /// </summary>
        internal static string WindowLabelWmp {
            get {
                return ResourceManager.GetString("WindowLabelWmp", resourceCulture);
            }
        }
    }
}
