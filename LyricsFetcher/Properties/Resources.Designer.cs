//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LyricsFetcher.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LyricsFetcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LyricsFetcher.
        /// </summary>
        internal static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap burn16 {
            get {
                object obj = ResourceManager.GetObject("burn16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lyrics cache has been discard. Your next library load will be significantly slower..
        /// </summary>
        internal static string CacheDiscardedMsg {
            get {
                return ResourceManager.GetString("CacheDiscardedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lyrics cache is used to significantly speed up the loading of the music library. The cache is not involved with the fetching of lyrics from the internet. 
        ///
        ///You would want to discard the cache if you had modified lyrics within the library application itself, rather than through LyricsFetcher.
        ///
        ///Are you sure you want to discard all cached lyrics?.
        /// </summary>
        internal static string DiscardCacheMsg {
            get {
                return ResourceManager.GetString("DiscardCacheMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The iTunes application has been closed. You must restart this application to continue finding lyrics..
        /// </summary>
        internal static string ITunesClosedMsg {
            get {
                return ResourceManager.GetString("ITunesClosedMsg", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap network_offline {
            get {
                object obj = ResourceManager.GetObject("network_offline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap process_stop {
            get {
                object obj = ResourceManager.GetObject("process_stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap process_working {
            get {
                object obj = ResourceManager.GetObject("process_working", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This song could not be played. 
        ///
        ///The library returned this error: {0}
        ///
        ///Check to see if the underlying media file been moved or deleted..
        /// </summary>
        internal static string SongFailedToPlayMsg {
            get {
                return ResourceManager.GetString("SongFailedToPlayMsg", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap stop24 {
            get {
                object obj = ResourceManager.GetObject("stop24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap trebleclef128 {
            get {
                object obj = ResourceManager.GetObject("trebleclef128", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap trebleclef32 {
            get {
                object obj = ResourceManager.GetObject("trebleclef32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap trebleclef48 {
            get {
                object obj = ResourceManager.GetObject("trebleclef48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LyricsFetcher - iTunes Library.
        /// </summary>
        internal static string WindowLabelITunes {
            get {
                return ResourceManager.GetString("WindowLabelITunes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LyricsFetcher - Windows Media Player Library.
        /// </summary>
        internal static string WindowLabelWmp {
            get {
                return ResourceManager.GetString("WindowLabelWmp", resourceCulture);
            }
        }
    }
}
